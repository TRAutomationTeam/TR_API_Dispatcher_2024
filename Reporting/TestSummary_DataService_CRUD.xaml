<Activity mc:Ignorable="sap sap2010" x:Class="TestSummary_DataService_CRUD" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:e="clr-namespace:ExceptionClassifier;assembly=ExceptionClassifier" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:t="clr-namespace:TR_AUT_API_1st_Submission_Dispatcher;assembly=DataService.TR_AUT_API_1st_Submission_Dispatcher" xmlns:uda="clr-namespace:UiPath.DataService.Activities;assembly=UiPath.DataService.Activities.Core" xmlns:udam="clr-namespace:UiPath.DataService.Activities.Models;assembly=UiPath.DataService.Activities.Core" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property Name="in_TestReportExcel" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>TestSummary_DataService_CRUD_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>TR_Aut_Workflow_Performer_DD_2023</x:String>
      <x:String>UiPath.DataService.Definition</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.DataService.Activities</x:String>
      <x:String>UiPath.DataService.Activities.Models</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>TR_Aut_Dispatcher_2024</x:String>
      <x:String>TR_AUT_API_Submission_Performer</x:String>
      <x:String>TR_AUT_API_1st_Submission_Dispatcher</x:String>
      <x:String>ExceptionClassifier</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.MetadataLoadContext</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>Microsoft.Extensions.DependencyModel</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>DataService.TR_Aut_Workflow_Performer_DD_2023</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Definition</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Activities.Core</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Python.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>DataService.TR_Aut_Dispatcher_2024</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>DataService.TR_AUT_API_Submission_Performer</AssemblyReference>
      <AssemblyReference>TR_AUT_API_Submission_Performer.Core</AssemblyReference>
      <AssemblyReference>DataService.TR_AUT_API_1st_Submission_Dispatcher</AssemblyReference>
      <AssemblyReference>ExceptionClassifier</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="TestSummary_DataService_CRUD" sap:VirtualizedContainerService.HintSize="1106,7404" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="t:TRAutomationMaster" sap2010:Annotation.AnnotationText="Type 't:TRAutomationMaster' ('clr-namespace:TR_Aut_Workflow_Performer_DD_2023;assembly=DataService.TR_Aut_Workflow_Performer_DD_2023') could not be resolved and was automatically replaced with 'UnknownType'&#xA;Type 't:TRAutomationMaster' ('clr-namespace:TR_Aut_Dispatcher_2024;assembly=DataService.TR_Aut_Dispatcher_2024') could not be resolved and was automatically replaced with 'UnknownType'&#xA;Type 't:TRAutomationMaster' ('clr-namespace:TR_AUT_API_Submission_Performer;assembly=DataService.TR_AUT_API_Submission_Performer') could not be resolved and was automatically replaced with 'UnknownType'" Name="AutomationMasterRecord" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_TransposedSummaryReport" />
      <Variable x:TypeArguments="t:TRAutomationMaster" sap2010:Annotation.AnnotationText="Type 't:TRAutomationMaster' ('clr-namespace:TR_Aut_Workflow_Performer_DD_2023;assembly=DataService.TR_Aut_Workflow_Performer_DD_2023') could not be resolved and was automatically replaced with 'UnknownType'&#xA;Type 't:TRAutomationMaster' ('clr-namespace:TR_Aut_Dispatcher_2024;assembly=DataService.TR_Aut_Dispatcher_2024') could not be resolved and was automatically replaced with 'UnknownType'&#xA;Type 't:TRAutomationMaster' ('clr-namespace:TR_AUT_API_Submission_Performer;assembly=DataService.TR_AUT_API_Submission_Performer') could not be resolved and was automatically replaced with 'UnknownType'" Name="ReportRecord" />
      <Variable x:TypeArguments="x:String" Name="ReportingMessage" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Data Service CRUD Ops" sap:VirtualizedContainerService.HintSize="871.2,7380.8" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Try" sap:VirtualizedContainerService.HintSize="869.6,6984" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="836,166.4" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="excel" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="836,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Data Service CRUD Operations started&quot;]" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="836,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;**************************************************************************************&quot;]" />
          <Assign DisplayName="Init Automation Master entity" sap:VirtualizedContainerService.HintSize="836,113.6" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="t:TRAutomationMaster">[AutomationMasterRecord]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="t:TRAutomationMaster">[new TRAutomationMaster]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayName="Data injection TestSummary Record to Data Service layer" sap:VirtualizedContainerService.HintSize="836,6295.2" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2" ShowExcelWindow="False">
            <ueab:ExcelProcessScopeX.Body>
              <ActivityAction x:TypeArguments="ui:IExcelProcess">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="802.4,6185.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Test Summary Report" sap:VirtualizedContainerService.HintSize="768.8,6125.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="[in_TestReportExcel]">
                    <ueab:ExcelApplicationCard.Body>
                      <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="735.2,5832.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="str_StartTimeDispatcher" />
                            <Variable x:TypeArguments="x:String" Name="str_EndTimeDispatcher" />
                            <Variable x:TypeArguments="x:String" Name="str_StartTimePerformer" />
                            <Variable x:TypeArguments="x:String" Name="str_EndTimePerformer" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch DisplayName="Exception Classifier" sap:VirtualizedContainerService.HintSize="701.6,2606.4" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence DisplayName="Exception Classifier" sap:VirtualizedContainerService.HintSize="539.2,2200.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="sd:DataTable" Name="dt_Exception" />
                                  <Variable x:TypeArguments="x:Int32" Name="counterException" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:ReadRangeX DisplayName="Summary Report" sap:VirtualizedContainerService.HintSize="505.6,201.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_2" Range="[Excel.Sheet(&quot;API 1st Submission&quot;).Range(&quot;A1&quot;)]" SaveTo="[dt_Exception]" />
                                <Assign sap:VirtualizedContainerService.HintSize="505.6,115.2" sap2010:WorkflowViewState.IdRef="Assign_4">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="sd:DataTable">[dt_Exception]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[If(dt_Exception.Select("[TC Status]='Fail'").Count&gt;0,
dt_Exception.Select("[TC Status]='Fail'").CopyToDataTable,
dt_Exception.Clone)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_Exception]" DisplayName="Iterate Exception info Component level" sap:VirtualizedContainerService.HintSize="505.6,1658.4" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                  <ui:ForEachRow.Body>
                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="504,1476.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="ClassifiedMessage" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <e:ExceptionClassifier bool_InitMode="{x:Null}" in_FlowType="{x:Null}" sap:VirtualizedContainerService.HintSize="470.4,278.4" sap2010:WorkflowViewState.IdRef="ExceptionClassifier_1" in_ExceptionMessage="[CurrentRow(&quot;Comments&quot;).ToString]" out_ClassifiedMessage="[ClassifiedMessage]" />
                                        <If Condition="[string.IsNullOrEmpty(ClassifiedMessage)]" DisplayName="Reporting Exception Info" sap:VirtualizedContainerService.HintSize="470.4,1138.4" sap2010:WorkflowViewState.IdRef="If_1">
                                          <If.Then>
                                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468.8,919.2" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[CurrentRow(&quot;Test-Case ID&quot;).ToString]" sap:VirtualizedContainerService.HintSize="435.2,754.4" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                                                <Switch.Default>
                                                  <Sequence DisplayName="Default" sap:VirtualizedContainerService.HintSize="433.6,89.6" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Sequence>
                                                </Switch.Default>
                                                <Assign x:Key="TC_01" DisplayName="Reporting Message" sap:VirtualizedContainerService.HintSize="433.6,83.2" sap2010:WorkflowViewState.IdRef="Assign_7">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ReportingMessage]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[If(counterException=0,
"API Token Generation"+" - "+ClassifiedMessage,
ReportingMessage+" | "+"API Token Generation"+" - "+ClassifiedMessage)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign x:Key="TC_02" DisplayName="Reporting Message" sap:VirtualizedContainerService.HintSize="433.6,83.2" sap2010:WorkflowViewState.IdRef="Assign_6">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ReportingMessage]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[If(counterException=0,
"API Create Binder"+" - "+ClassifiedMessage,
ReportingMessage+" | "+"API Create Binder"+" - "+ClassifiedMessage)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign x:Key="TC_03" DisplayName="Reporting Message" sap:VirtualizedContainerService.HintSize="433.6,83.2" sap2010:WorkflowViewState.IdRef="Assign_5">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ReportingMessage]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[If(counterException=0,
"Upload API"+" - "+ClassifiedMessage,
ReportingMessage+" | "+"Upload API"+" - "+ClassifiedMessage)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign x:Key="TC_04" DisplayName="Reporting Message" sap:VirtualizedContainerService.HintSize="433.6,83.2" sap2010:WorkflowViewState.IdRef="Assign_2">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ReportingMessage]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[If(counterException=0,
"Submit Binder API"+" - "+ClassifiedMessage,
ReportingMessage+" | "+"Submit Binder API"+" - "+ClassifiedMessage)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Switch>
                                              <Assign DisplayName="counter" sap:VirtualizedContainerService.HintSize="435.2,104.8" sap2010:WorkflowViewState.IdRef="Assign_3">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[counterException]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[counterException+1]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEachRow.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ForEachRow>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="505.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Reporting Exception - &quot;+ReportingMessage]" />
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="668,213.6" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="537.6,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Warn" Message="[&quot;Reporting Exception error- &quot;+exception.Message]" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                            <TryCatch.Finally>
                              <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="539.2,89.6" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </TryCatch.Finally>
                          </TryCatch>
                          <ueab:CopyPasteRangeX DestinationRange="[excel.Sheet(in_Config(&quot;TestSummary_TransposedWorksheet&quot;).ToString).Range(in_Config(&quot;TestSummary_TransposeRange&quot;).ToString)]" DisplayName="Transpose Summary Report" sap:VirtualizedContainerService.HintSize="701.6,273.6" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_1" PasteOptions="Values" SourceRange="[excel.Sheet(in_Config(&quot;TestSummary_SummaryWorksheet&quot;).ToString).Range(in_Config(&quot;TestSummary_SummaryRange&quot;).ToString)]" Transpose="True" />
                          <ueab:ReadCellValueX Cell="[excel.Sheet(in_Config(&quot;TestSummary_SummaryWorksheet&quot;).ToString).Cell(in_Config(&quot;TestSummary_StartTimeDIndex&quot;).ToString)]" DisplayName="Start Time Dispatcher w source format" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="701.6,192" sap2010:WorkflowViewState.IdRef="ReadCellValueX_1">
                            <ueab:ReadCellValueX.SaveTo>
                              <OutArgument x:TypeArguments="x:String">[str_StartTimeDispatcher]</OutArgument>
                            </ueab:ReadCellValueX.SaveTo>
                          </ueab:ReadCellValueX>
                          <ueab:ReadCellValueX Cell="[excel.Sheet(in_Config(&quot;TestSummary_SummaryWorksheet&quot;).ToString).Cell(in_Config(&quot;TestSummary_EndTimeDIndex&quot;).ToString)]" DisplayName="End Time Dispatcher w source format" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="701.6,192" sap2010:WorkflowViewState.IdRef="ReadCellValueX_2">
                            <ueab:ReadCellValueX.SaveTo>
                              <OutArgument x:TypeArguments="x:String">[str_EndTimeDispatcher]</OutArgument>
                            </ueab:ReadCellValueX.SaveTo>
                          </ueab:ReadCellValueX>
                          <ueab:ReadCellValueX Cell="[excel.Sheet(in_Config(&quot;TestSummary_SummaryWorksheet&quot;).ToString).Cell(in_Config(&quot;TestSummary_StartTimePIndex&quot;).ToString)]" DisplayName="Start Time Performer w source format" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="701.6,192" sap2010:WorkflowViewState.IdRef="ReadCellValueX_3">
                            <ueab:ReadCellValueX.SaveTo>
                              <OutArgument x:TypeArguments="x:String">[str_StartTimePerformer]</OutArgument>
                            </ueab:ReadCellValueX.SaveTo>
                          </ueab:ReadCellValueX>
                          <ueab:ReadCellValueX Cell="[excel.Sheet(in_Config(&quot;TestSummary_SummaryWorksheet&quot;).ToString).Cell(in_Config(&quot;TestSummary_EndTimePIndex&quot;).ToString)]" DisplayName="End Time Performer w source format" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="701.6,192" sap2010:WorkflowViewState.IdRef="ReadCellValueX_4">
                            <ueab:ReadCellValueX.SaveTo>
                              <OutArgument x:TypeArguments="x:String">[str_EndTimePerformer]</OutArgument>
                            </ueab:ReadCellValueX.SaveTo>
                          </ueab:ReadCellValueX>
                          <ueab:ReadRangeX DisplayName="Read Transposed Summary Range" sap:VirtualizedContainerService.HintSize="701.6,201.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[excel.Sheet(&quot;Transposed Data&quot;).Range(in_Config(&quot;TestSummary_TransposeRange&quot;).ToString)]" SaveTo="[dt_TransposedSummaryReport]" />
                          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_TransposedSummaryReport]" DisplayName="Binder Specific entry - Create Master Entity in Data Service" sap:VirtualizedContainerService.HintSize="701.6,1809.6" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                            <ui:ForEachRow.Body>
                              <ActivityAction x:TypeArguments="sd:DataRow">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="512,1628" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MultipleAssign DisplayName="Test Summary Automation Master Records" sap:VirtualizedContainerService.HintSize="478.4,1053.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="64">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.StartTimePerformer]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[str_StartTimePerformer]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.BinderID]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Binder ID").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.EngagementType]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Engagement Type").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.ServiceType]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.item("Service Type").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.TaxSoftware]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Tax Software").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.LeadsheetType]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Leadsheet Type").ToString.trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.SubmissionType]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Submission Type").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.TaxYear]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Tax Year").ToString.trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.StartTimeDispatcher]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[str_StartTimeDispatcher]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.EndTimeDispatcher]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[str_EndTimeDispatcher]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.EndTimePerformer]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[str_EndTimePerformer]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.Uniquereferencenumber]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Unique reference number").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.UserIdentity]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("User Identity").ToString.trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.Machine]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Machine").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.UserEmail]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.item("User Email").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.AttendedUnattendedMode]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.item("Attended /Unattended Mode?").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.ExecutionStatus]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Execution Status").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.TotalTCsApplicable]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Total TC's - Applicable").ToString.trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.TotalTCsExecuted]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Total TC's - Executed").ToString.trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.TotalTCsPass]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Total TC's - Pass").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.TotalTCsFail]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Total TC's - Fail").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.TotalTCsNotApplicable]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Total TC's - Not Applicable").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.StatusSubmissionWizard]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Status API 1st Submission").ToString.trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.StatusSCD]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Status SCD").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.StatusWizard]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Status Wizard").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.StatusBinderMenu]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Row.Item("Status API 2nd Submission").ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_44">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.ScriptedOn]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[now.ToString("dd/MM/yyyy")]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.Environment]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[If(in_Config("Fileroom_URL").ToString().Contains("production"), "LIVE", If(in_Config("Fileroom_URL").ToString().Contains("stgtr"), "STAGE", "QAT"))]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.ExceptionDetails]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[ReportingMessage]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_47">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[AutomationMasterRecord.SubmissionType]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">API</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:MultipleAssign>
                                  <uda:CreateEntityRecord x:TypeArguments="t:TRAutomationMaster" VisibleDynamicPropertiesInfo="{x:Null}" ContinueOnError="False" DisplayName="Create Entity Record" EntityId="6e0003df-b003-f011-90cb-0022489c7866" ExpansionDepth="2" sap:VirtualizedContainerService.HintSize="478.4,174.4" sap2010:WorkflowViewState.IdRef="CreateEntityRecord`1_1" InputEntity="[AutomationMasterRecord]" InputEntityInFieldView="[new TR_AUT_API_1st_Submission_Dispatcher.TRAutomationMaster()]" IsInRecordView="True" OutputEntity="[ReportRecord]" TimeoutInMs="30000">
                                    <uda:CreateEntityRecord.State>
                                      <udam:RecordState IsInRecordView="True">
                                        <udam:RecordState.SelectedFields>
                                          <scg:List x:TypeArguments="udam:DynamicEntityField" Capacity="3">
                                            <udam:DynamicEntityField Id="cba76572-b203-f011-90cb-0022489c7866" Name="AttendedUnattendedMode">
                                              <udam:DynamicEntityField.ArgumentValue>
                                                <InArgument x:TypeArguments="x:String" />
                                              </udam:DynamicEntityField.ArgumentValue>
                                            </udam:DynamicEntityField>
                                            <udam:DynamicEntityField Id="0afa0f42-5620-f011-8b3d-002248a1377f" Name="BinderCreationGFR">
                                              <udam:DynamicEntityField.ArgumentValue>
                                                <InArgument x:TypeArguments="x:String" />
                                              </udam:DynamicEntityField.ArgumentValue>
                                            </udam:DynamicEntityField>
                                            <udam:DynamicEntityField Id="279d3c9b-b103-f011-90cb-0022489c7866" Name="BinderID">
                                              <udam:DynamicEntityField.ArgumentValue>
                                                <InArgument x:TypeArguments="x:String" />
                                              </udam:DynamicEntityField.ArgumentValue>
                                            </udam:DynamicEntityField>
                                          </scg:List>
                                        </udam:RecordState.SelectedFields>
                                      </udam:RecordState>
                                    </uda:CreateEntityRecord.State>
                                  </uda:CreateEntityRecord>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478.4,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Data Service Reporter ID generated - &quot;+ReportRecord.Id.ToString +&quot; for ref# &quot;+row.Item(&quot;Unique reference number&quot;).ToString]" />
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478.4,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;**************************************************************************************&quot;]" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEachRow.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEachRow>
                          <ueab:DeleteSheetX DisplayName="Delete Transposed Sheet" sap:VirtualizedContainerService.HintSize="701.6,113.6" sap2010:WorkflowViewState.IdRef="DeleteSheetX_1" Sheet="[excel.Sheet(&quot;Transposed Data&quot;)]" />
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelApplicationCard.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ueab:ExcelApplicationCard>
                </Sequence>
              </ActivityAction>
            </ueab:ExcelProcessScopeX.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ueab:ExcelProcessScopeX>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="872.8,213.6" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log failure of data service injection" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Failed to inject data service record - &quot;+exception.Message]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>